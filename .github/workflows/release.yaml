name: Build and Release Services

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [codec, ai_assistant, auditor, server]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.20"

      - name: Build solidity_parser
        run: |
          cd solidity_parser
          go build -v ./...

      - name: Build ${{ matrix.service }}
        run: |
          cd ${{ matrix.service }}
          go build -v -o ${matrix.service}_service ./${matrix.service}.go

      - name: Upload ${{ matrix.service }} artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.service }}_service
          path: ${{ matrix.service }}/${matrix.service}_service

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Download all artifacts
        uses: actions/download-artifact@v3

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        run: |
          for service in codec ai_assistant auditor server; do
            asset_path="./${service}_service/${service}_service"
            asset_name="${service}_service"
            content_type="application/octet-stream"
            curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                 -H "Content-Type: ${content_type}" \
                 --data-binary @"${asset_path}" \
                 "${{ steps.create_release.outputs.upload_url }}?name=${asset_name}"
          done
