openapi: 3.1.0
info:
  title: Smart Contract Processing API
  description: API for uploading a file, processing it asynchronously, and receiving progress updates and result
  version: 1.0.0
servers:
  - url: http://0.0.0.0:8080/api
paths:
  /upload:
    post:
      summary: Upload a file for processing
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
                - openAiKey
              properties:
                file:
                  type: string
                  format: binary
                openAiKey:
                  type: string
                  description: OpenAI API key

      responses:
        "200":
          description: File successfully uploaded
          content:
            application/json:
              schema:
                type: object
                required:
                  - taskId
                properties:
                  taskId:
                    type: string
                    description: Identifier for the uploaded task
  /export/{taskId}:
    post:
      summary: Post the new Source unit into the task
      parameters:
        - in: path
          name: taskId
          required: true
          description: Identifier of the task to get status for
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sourceUnit:
                  type: object
                  description: Source unit to be downloaded for the task
      responses:
        "200":
          description: File successfully uploaded
          content:
            application/json:
              schema:
                type: object
                required:
                  - contractCode
                properties:
                  contractCode:
                    type: string
                    description: Identifier for the uploaded task
  /tasks/{taskId}:
    get:
      summary: Get the status of a processing task
      parameters:
        - in: path
          name: taskId
          required: true
          description: Identifier of the task to get status for
          schema:
            type: string
      responses:
        "200":
          description: Task status retrieved successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - status
                  - progress
                  - statusMessage
                properties:
                  id:
                    type: string
                    description: Identifier of the task
                  status:
                    type: string
                    enum:
                      - processing
                      - completed
                      - failed
                    description: Current status of the task
                  result:
                    type: object
                    description: Result of the processing task (dynamic structure)
                  vulnerabilities:
                    type: object
                    description: Result of the slither analysis (dynamic structure)
                  links:
                    type: object
                    description: Contains the connections between elements (dynamic structure)
                  warnings:
                    type: object
                    description: Contains the ids of functions which can be improved (dynamic structure)
                  progress:
                    type: integer
                    description: Percentage of completion of the task
                  statusMessage:
                    type: string
                    description: Additional information about the status of the task
    post:
      summary: Post the new Source unit into the task
      parameters:
        - in: path
          name: taskId
          required: true
          description: Identifier of the task to get status for
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sourceUnit:
                  type: object
                  description: Source unit to be updated for the task
      responses:
        "200":
          description: File successfully uploaded
          content:
            application/json:
              schema:
                type: object
                required:
                  - taskId
                properties:
                  taskId:
                    type: string
                    description: Identifier for the uploaded task
